name: "Test AWS Role Chaining"

on:
  push:
    branches:
      - "touhid-test"

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ENVIRONMENT_NAME: dev2
  AWS_REGION: ${{ vars.AWS_REGION }}
  BODS_DEFAULT_GITHUB_ACTIONS_ASSUME_ROLE_ARN: ${{ secrets.BODS_DEFAULT_GITHUB_ACTIONS_ASSUME_ROLE_ARN }}
  PROD_ASSUME_ROLE_ARN: ${{ secrets.PROD_ASSUME_ROLE_ARN }}
  NON_PROD_ASSUME_ROLE_ARN: ${{ secrets.NON_PROD_ASSUME_ROLE_ARN }}

jobs:
  test_role_chaining:
    name: "Test"
    runs-on: ubuntu-latest

    steps:

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4.1.4

      # Configure AWS credentials with Shared Services
      - name: Configure AWS Credentials in Shared Services
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.BODS_DEFAULT_GITHUB_ACTIONS_ASSUME_ROLE_ARN }}
          role-session-name: testAWSCLISession
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Now assume a role in the PROD
      - name: Configure AWS Credentials in bodds-prod
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.PROD_ASSUME_ROLE_ARN }}
          role-session-name: testAWSCLISession
          role-duration-seconds: 3600
          role-skip-session-tagging: true
          role-chaining: true

      # Now assume a role back in the Shared Services
      - name: Configure AWS Credentials in Shared Services
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.BODS_DEFAULT_GITHUB_ACTIONS_ASSUME_ROLE_ARN }}
          role-session-name: testAWSCLISession
          role-duration-seconds: 3600
          role-skip-session-tagging: true
          unset-current-credentials: true

      # Now assume a role in the NON_PROD
      - name: Configure AWS Credentials in bodds-non-prod
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.NON_PROD_ASSUME_ROLE_ARN }}
          role-session-name: testAWSCLISession
          role-duration-seconds: 3600
          role-skip-session-tagging: true
          role-chaining: true


