[tool.poetry]
name = "bods"
version = "1.22.0"
description = "Bus Open Data Service"
authors = [
        "Angus Bell <angus.bell@itoworld.com>",
        "Andrea Garau <andrea.garau@itoworld.com>",
        "Paul Holland <paul.holland@itoworld.com>",
        "Ciaran McCormick <ciaran.mccormick@itoworld.com>",
]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"

argh = "~=0.30.4"
argon2-cffi = "~=23.1.0"
attrs = "~=23.1.0"
celery = "~=5.3.6"
clamd = "~=1.0.2"
crispy-forms-govuk = {url = "https://github.com/brahmaduttau/django-crispy-forms-govuk/archive/refs/heads/main.zip"}
ddtrace = "~=2.3.1"
decorator = "~=5.1.1"
defusedxml = "~=0.7.1"
django = "~=4.2.7"
django-allauth = "~=0.58.2"
django-anymail = { extras = ["mailgun"], version = "~=10.2" }
django-celery-beat = "~=2.5.0"
django-celery-results = "~=2.5.1"
django-classy-tags = "~=4.1.0"
django-cors-headers = "~=4.3.1"
django-crispy-forms = "~=2.1"
django-environ = "~=0.11.2"
django-extensions = "~=3.2.3"
django-filter = "~=23.4"
django-formtools = "~=2.4.1"
django-fsm = "~=2.8.1"
django-hosts = "~=6.0"
django-invitations = "~=2.1.0"
django-model-utils = "~=4.3.1"
django-redis = "~=5.4.0"
django-rest-swagger = "~=2.2.0"
django-storages = { extras = ["boto3"], version = "~=1.14.2" }
django-tables2 = "~=2.6.0"
django-waffle = "^4.0.0"
djangorestframework = "~=3.14.0"
djangorestframework-gis = "~=1.0"
fiona = "~=1.9.5"
flower = "~=2.0.1"
freezegun = "~=1.2.2"
geopandas = "~=0.14.1"
gunicorn = "~=21.2.0"
ipython = "~=8.18.0"
isoduration = "~=20.11.0"
lxml = "^4.9.3"
notifications-python-client = "~=8.1.0"
openpyxl = "^3.1.2"
pandas = "2.1.3"
Pillow = "^10.1.0"
psycopg2-binary = "~=2.9.9"
pydantic = "~=2.5.2"
pyproj = "~=3.6.1"
pytz = "~=2023.3.post1"
redis = "~=5.0.1"
shapely = "~=2.0.2"
stories = "~=5.1.0"
tenacity = "~=8.2.3"
whitenoise = "~=6.6.0"
setuptools="~=69.0.2"
gdal = "^3.8.0"

[tool.poetry.dev-dependencies]
black = "~=22.1.0"
coverage = "~=7.3.2"
ddt = "~=1.7.0"
django-debug-toolbar = "~=4.2.0"
django-querycount = "^0.8.3"
djhtml = "^3.0.6"
factory-boy = "~=3.3.0"
flake8 = "~=6.1.0"
ipdb = "~=0.13.13"
isort = "~=5.12.0"
mocket = "~=3.12.0"
nose = "~=1.3.7"
pre-commit = "~=3.5.0"
pytest = "~=7.4.3"
pytest-cov = "~=4.1.0"
pytest-deadfixtures = "^2.2.1"
pytest-django = "~=4.7.0"
pytest-factoryboy = "~=2.6.0"
pytest-mock = "~=3.12.0"
pytest-sugar = "~=0.9.7"
pytest-xdist = "~=3.5.0"
pyyaml = "~=6.0.1"
requests-mock = "~=1.11.0"
safety = "~=2.3.5"
watchdog = "~=3.0.0"
werkzeug = "~=3.0.1"
debugpy = "1.8.0"
ruff = "^0.1.6"
djlint = "^1.34.0"
bandit = "^1.7.5"


[build-system]
requires = ["poetry-core>=1.8.1"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
skips = ["B101", "B601", "B113", "B602", "B404", "B311"]
exclude_dirs = [
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "public",
    "static",
    ".vscode",
    ".idea",
    ".github",
    "assets",
    "js",
    "lib",
]

### (optional) plugin settings "some test plugins require configuration data
### that may be given here, per-plugin. All bandit test plugins have a built in
### set of sensible defaults and these will be used if no configuration is
### provided. It is not necessary to provide settings for every (or any) plugin
### if the defaults are acceptable.
[tool.bandit.any_other_function_with_shell_equals_true]
no_shell = [
    "os.execl",
    "os.execle",
    "os.execlp",
    "os.execlpe",
    "os.execv",
    "os.execve",
    "os.execvp",
    "os.execvpe",
    "os.spawnl",
    "os.spawnle",
    "os.spawnlp",
    "os.spawnlpe",
    "os.spawnv",
    "os.spawnve",
    "os.spawnvp",
    "os.spawnvpe",
    "os.startfile",
]

shell = [
    "os.system",
    "os.popen",
    "os.popen2",
    "os.popen3",
    "os.popen4",
    "popen2.popen2",
    "popen2.popen3",
    "popen2.popen4",
    "popen2.Popen3",
    "popen2.Popen4",
    "commands.getoutput",
    "commands.getstatusoutput",
]

subprocess = [
    "subprocess.Popen",
    "subprocess.call",
    "subprocess.check_call",
    "subprocess.check_output",
]


[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # complexity
    "B904", # B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling,
    "B006", # B006 Do not use mutable data structures for argument defaults
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.djlint]
blank_line_after_tag = "endblock"
blank_line_before_tag = "load,extends,macro,block"
profile = "django"
close_void_tags = true
exclude = ".venv,.vscode,.idea,node_modules"
extension = "html"
format_attribute_template_tags = true
indent_size = 2
indent = 2
line_break_after_multiline_tag = true
max_attribute_length = 120
max_line_length = 120
use_gitignore = true
ignore = "T003,H023,H006,H029"
format_js = false
preserve_blank_lines = false
