# Generated by Django 2.2.6 on 2019-11-12 15:11

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("data_quality", "0003_auto_20191112_1416"),
    ]

    operations = [
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="data_quality.DataQualityReport",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceLink",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServicePattern",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.LineStringField(srid=4326),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_patterns",
                        to="data_quality.DataQualityReport",
                    ),
                ),
                (
                    "service_links",
                    models.ManyToManyField(
                        related_name="service_patterns", to="data_quality.ServiceLink"
                    ),
                ),
                (
                    "services",
                    models.ManyToManyField(
                        related_name="service_patterns", to="data_quality.Service"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServicePatternStop",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sequence_number", models.IntegerField()),
                (
                    "service_pattern",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_pattern_stops",
                        to="data_quality.ServicePattern",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TimingPattern",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_pattern",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timing_patterns",
                        to="data_quality.ServicePattern",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleJourney",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.TimeField()),
                (
                    "timing_pattern",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_quality.TimingPattern",
                    ),
                ),
            ],
            options={
                "ordering": ("start_time",),
            },
        ),
        migrations.CreateModel(
            name="TimingPatternStop",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "arrival",
                    models.DurationField(
                        help_text="The duration of time from the Vehicle Journey start time to reach service_pattern_stop"
                    ),
                ),
                (
                    "departure",
                    models.DurationField(
                        help_text="The duration of time from the Vehicle Journey start time to depart service_pattern_stop"
                    ),
                ),
                ("pickup_allowed", models.BooleanField(default=True)),
                ("setdown_allowed", models.BooleanField(default=True)),
                ("timing_point", models.BooleanField(default=False)),
                (
                    "service_pattern_stop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timings",
                        to="data_quality.ServicePatternStop",
                    ),
                ),
                (
                    "timing_pattern",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timing_pattern_stops",
                        to="data_quality.TimingPattern",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StopPoint",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("atco_code", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=255)),
                ("type", models.CharField(max_length=10)),
                ("bearing", models.IntegerField()),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stops",
                        to="data_quality.DataQualityReport",
                    ),
                ),
            ],
            options={
                "ordering": ("atco_code",),
                "unique_together": {("report", "atco_code")},
            },
        ),
        migrations.AddField(
            model_name="servicepatternstop",
            name="stop",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="service_pattern_stops",
                to="data_quality.StopPoint",
            ),
        ),
        migrations.AddField(
            model_name="servicepattern",
            name="stops",
            field=models.ManyToManyField(
                related_name="service_patterns",
                through="data_quality.ServicePatternStop",
                to="data_quality.StopPoint",
            ),
        ),
        migrations.AddField(
            model_name="servicelink",
            name="from_stop",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="from_service_links",
                to="data_quality.StopPoint",
            ),
        ),
        migrations.AddField(
            model_name="servicelink",
            name="report",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="service_links",
                to="data_quality.DataQualityReport",
            ),
        ),
        migrations.AddField(
            model_name="servicelink",
            name="to_stop",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="to_service_links",
                to="data_quality.StopPoint",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="servicepatternstop",
            unique_together={("service_pattern", "stop", "sequence_number")},
        ),
        migrations.AlterUniqueTogether(
            name="servicelink",
            unique_together={("report", "from_stop", "to_stop")},
        ),
    ]
