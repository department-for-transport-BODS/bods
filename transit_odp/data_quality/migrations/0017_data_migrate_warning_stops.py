# Generated by Django 2.2.7 on 2019-11-20 15:52
import logging

from django.db import migrations
from django.db.models import Q

logger = logging.getLogger(__name__)


def migrate_stops_to_timings(apps, schema_editor):
    """
    This data migration populates the 'timings' m2m relationship on each warning
    with TimingPatternStop. The existing 'stops' m2m represents this data
    but is not correctly modelled as it relates to the ServicePatternStop model.

    The 'stops' m2m will be removed in the next migration.
    """

    logger.info("Migrating warning stops to timings")

    TimingPatternStop = apps.get_model("data_quality", "TimingPatternStop")

    FastLinkWarning = apps.get_model("data_quality", "FastLinkWarning")
    FastTimingWarning = apps.get_model("data_quality", "FastTimingWarning")
    SlowLinkWarning = apps.get_model("data_quality", "SlowLinkWarning")
    SlowTimingWarning = apps.get_model("data_quality", "SlowTimingWarning")

    for warning_class in [
        FastLinkWarning,
        FastTimingWarning,
        SlowLinkWarning,
        SlowTimingWarning,
    ]:
        for warning in warning_class.objects.all():
            stops = warning.stops.all()
            timings = TimingPatternStop.objects.filter(
                timing_pattern=warning.timing_pattern, service_pattern_stop__in=stops
            )
            warning.timings.add(*list(timings))


class Migration(migrations.Migration):
    dependencies = [
        ("data_quality", "0016_auto_20191120_1551"),
    ]

    operations = [
        migrations.RunPython(
            migrate_stops_to_timings, migrations.RunPython.noop, elidable=True
        )
    ]
