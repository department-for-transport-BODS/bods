# Generated by Django 2.2.5 on 2019-09-30 08:49

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AdminArea",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("traveline_region_id", models.CharField(max_length=255)),
                ("atco_code", models.CharField(max_length=255, unique=True)),
                ("date_of_issue", models.DateField()),
                ("issue_version", models.CharField(max_length=255)),
            ],
            options={"ordering": ("name",)},
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("date_of_issue", models.DateField()),
                ("issue_version", models.CharField(max_length=255)),
            ],
            options={"ordering": ("name",)},
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "gazetteer_id",
                    models.CharField(max_length=8, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("easting", models.IntegerField()),
                ("northing", models.IntegerField()),
                ("last_change", models.DateField()),
                ("date_of_issue", models.DateField()),
                ("issue_version", models.CharField(max_length=255)),
                (
                    "admin_area",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="naptan.AdminArea",
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="naptan.District",
                    ),
                ),
            ],
            options={"ordering": ("name",)},
        ),
        migrations.CreateModel(
            name="StopPoint",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("atco_code", models.CharField(max_length=255, unique=True)),
                ("naptan_code", models.CharField(blank=True, max_length=12, null=True)),
                ("common_name", models.CharField(max_length=255)),
                ("street", models.CharField(blank=True, max_length=255, null=True)),
                ("indicator", models.CharField(blank=True, max_length=255, null=True)),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                (
                    "admin_area",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stops",
                        to="naptan.AdminArea",
                    ),
                ),
                (
                    "locality",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stops",
                        to="naptan.Locality",
                    ),
                ),
            ],
            options={"ordering": ("atco_code",)},
        ),
    ]
