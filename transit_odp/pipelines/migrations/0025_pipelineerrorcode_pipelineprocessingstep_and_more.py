# Generated by Django 4.2.14 on 2024-10-29 13:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("pipelines", "0024_alter_dataqualitytask_status_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="PipelineErrorCode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "error",
                    models.CharField(
                        choices=[
                            ("DANGEROUS_XML_ERROR", "DANGEROUS_XML_ERROR"),
                            ("DATASET_EXPIRED", "DATASET_EXPIRED"),
                            ("FILE_TOO_LARGE", "FILE_TOO_LARGE"),
                            ("NESTED_ZIP_FORBIDDEN", "NESTED_ZIP_FORBIDDEN"),
                            ("NO_DATA_FOUND", "NO_DATA_FOUND"),
                            ("NO_VALID_FILE_TO_PROCESS", "NO_VALID_FILE_TO_PROCESS"),
                            ("POST_SCHEMA_ERROR", "POST_SCHEMA_ERROR"),
                            ("SCHEMA_ERROR", "SCHEMA_ERROR"),
                            ("SCHEMA_VERSION_MISSING", "SCHEMA_VERSION_MISSING"),
                            (
                                "SCHEMA_VERSION_NOT_SUPPORTED",
                                "SCHEMA_VERSION_NOT_SUPPORTED",
                            ),
                            ("SUSPICIOUS_FILE", "SUSPICIOUS_FILE"),
                            ("SYSTEM_ERROR", "SYSTEM_ERROR"),
                            ("XML_SYNTAX_ERROR", "XML_SYNTAX_ERROR"),
                            ("ZIP_TOO_LARGE", "ZIP_TOO_LARGE"),
                        ],
                        max_length=255,
                        unique=True,
                    ),
                ),
            ],
            options={
                "db_table": "pipelines_pipelineerrorcode",
            },
        ),
        migrations.CreateModel(
            name="PipelineProcessingStep",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "category",
                    models.CharField(
                        choices=[("FARES", "FARES"), ("TIMETABLES", "TIMETABLES")],
                        default="TIMETABLES",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "db_table": "pipelines_pipelineprocessingstep",
            },
        ),
        migrations.AlterField(
            model_name="datasetetltaskresult",
            name="error_code",
            field=models.CharField(
                blank=True,
                choices=[
                    ("DANGEROUS_XML_ERROR", "DANGEROUS_XML_ERROR"),
                    ("DATASET_EXPIRED", "DATASET_EXPIRED"),
                    ("FILE_TOO_LARGE", "FILE_TOO_LARGE"),
                    ("NESTED_ZIP_FORBIDDEN", "NESTED_ZIP_FORBIDDEN"),
                    ("NO_DATA_FOUND", "NO_DATA_FOUND"),
                    ("NO_VALID_FILE_TO_PROCESS", "NO_VALID_FILE_TO_PROCESS"),
                    ("POST_SCHEMA_ERROR", "POST_SCHEMA_ERROR"),
                    ("SCHEMA_ERROR", "SCHEMA_ERROR"),
                    ("SCHEMA_VERSION_MISSING", "SCHEMA_VERSION_MISSING"),
                    ("SCHEMA_VERSION_NOT_SUPPORTED", "SCHEMA_VERSION_NOT_SUPPORTED"),
                    ("SUSPICIOUS_FILE", "SUSPICIOUS_FILE"),
                    ("SYSTEM_ERROR", "SYSTEM_ERROR"),
                    ("XML_SYNTAX_ERROR", "XML_SYNTAX_ERROR"),
                    ("ZIP_TOO_LARGE", "ZIP_TOO_LARGE"),
                ],
                db_index=True,
                help_text="The error code returned for the failed task",
                max_length=50,
                verbose_name="Task Error Code",
            ),
        ),
        migrations.CreateModel(
            name="FileProcessingResult",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("filename", models.CharField(max_length=255)),
                (
                    "task_id",
                    models.CharField(
                        db_index=True,
                        help_text="The Unique Lambda ID for the Task that was run",
                        max_length=255,
                        unique=True,
                        verbose_name="Lambda Task ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ERROR", "ERROR"),
                            ("FAILURE", "FAILURE"),
                            ("STARTED", "STARTED"),
                            ("SUCCESS", "SUCCESS"),
                        ],
                        max_length=50,
                    ),
                ),
                ("message", models.TextField(blank=True, null=True)),
                (
                    "pipeline_error_code",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="file_processing_errors",
                        to="pipelines.pipelineerrorcode",
                    ),
                ),
                (
                    "pipeline_processing_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="file_processing_steps",
                        to="pipelines.pipelineprocessingstep",
                    ),
                ),
                (
                    "revision",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="file_processing_results",
                        to="organisation.datasetrevision",
                    ),
                ),
            ],
            options={
                "db_table": "pipelines_fileprocessingresult",
            },
        ),
    ]
