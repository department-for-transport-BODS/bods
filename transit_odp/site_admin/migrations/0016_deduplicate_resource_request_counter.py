# Generated by Django 3.2.13 on 2022-07-11 10:18
from django.contrib.postgres.aggregates import ArrayAgg
from django.db import migrations
from django.db.models import Count, Sum

from transit_odp.site_admin.models import ResourceRequestCounter


def deduplicate_resource_request_counter(model: ResourceRequestCounter):
    """
    Creates an annotated queryset does the following
     * counts and groups distinct date, requestor and path_info
     * lists all ids for matching values
     * sums counter

    We then iterate over all records where the count is more than one.
    The duplicates ids are stored for later deletion
    Single entries are created in their place.

    """
    duplicated_entries = (
        model.objects.values("date", "requestor_id", "path_info")
        .annotate(
            counter_total=Sum("counter"),
            entries=Count(("date", "requestor_id", "path_info")),
            ids=ArrayAgg("id"),
        )
        .filter(entries__gt=1)
    )
    fixed = []
    delete_ids = []

    for entry in duplicated_entries:
        date = entry["date"]
        requestor_id = entry["requestor_id"]
        path_info = entry["path_info"]
        counter = entry["counter_total"]
        ids = entry["ids"]
        delete_ids += ids

        fixed.append(
            model(
                date=date,
                requestor_id=requestor_id,
                path_info=path_info,
                counter=counter,
            )
        )

    model.objects.filter(id__in=delete_ids).delete()
    model.objects.bulk_create(fixed, batch_size=10000)


def fix_duplicated_entries(apps, schema_editor):
    model = apps.get_model("site_admin", "ResourceRequestCounter")
    deduplicate_resource_request_counter(model)


def rollback_duplicate_entries(apps, schema_editor):
    # Just pass this because we cant recreate duplicate values and rolling back
    # will enable us to run the migration again in case duplicate entries come
    # back before we can add the unique constraint
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("site_admin", "0015_add_indexes_to_datetimes"),
    ]

    operations = [
        migrations.RunPython(fix_duplicated_entries, rollback_duplicate_entries)
    ]
