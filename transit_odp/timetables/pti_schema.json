{
  "header": {
    "namespaces": { "x": "http://www.transxchange.org.uk/" },
    "version": "1.1.0",
    "guidance_document": "https://pti.org.uk/system/files/files/TransXChange%20UK%20PTI%20Profile%20v1.1.pdf",
    "notes": "Some advisory notes"
  },
  "observations": [
    {
      "details": "Notes field is optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in 'Notes' field. The private element can only be 'false' and cannot be set to 'true'.",
      "category": "Notes",
      "service_type": "All",
      "reference": "2.5",
      "context": "//x:Notes/x:Note/x:Private",
      "number": 8,
      "rules": [{ "test": "not(bool(.))" }]
    },
    {
      "details": "Serviced Organisations are optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in the 'Name' element in 'ServicedOrganisation' field. Please provide a meaningful name for the organisation composed of more than 5 characters at least.",
      "category": "Serviced organisations",
      "service_type": "All",
      "reference": "3.2",
      "context": "//x:ServicedOrganisations/x:ServicedOrganisation",
      "number": 10,
      "rules": [
        { "test": "count(x:Name) = 1" },
        { "test": "string-length(strip(x:Name)) >= 5" }
      ]
    },
    {
      "details": " Serviced Organisations are optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in 'WorkingDays' field. Since your 'StartDate' value equals your 'CurrentDate' value, the 'Provisional' field cannot be set to 'true'. Please remove the values from the Provisional or set it to 'false'.",
      "category": "Serviced organisations",
      "service_type": "All",
      "reference": "3.2",
      "context": "//x:ServicedOrganisation/x:WorkingDays/x:DateRange",
      "number": 11,
      "rules": [
        { "test": "count(x:StartDate) > 0" },
        {
          "test": "date(x:StartDate) <= today() and not(bool(x:Provisional)) or date(x:StartDate) > today()"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'OperatorGroup' field. Please make sure your TransxChange file contains not more than one operator element in the operator group",
      "category": "Operators, Garages and Registrations",
      "service_type": "All",
      "reference": "4.2",
      "context": "//x:Operators",
      "number": 12,
      "rules": [{ "test": "count(x:Operator) = 1" }]
    },
    {
      "details": "Mandatory elements incorrect in 'LicensedOperator' field. An Operators group cannot contain LicensedOperator, the field is not allowed. Please remove it.",
      "category": "Operators, Garages and Registrations",
      "service_type": "All",
      "reference": "4.2",
      "context": "//x:Operators",
      "number": 13,
      "rules": [{ "test": "count(x:LicensedOperator) = 0" }]
    },
    {
      "details": "Mandatory elements incorrect in 'RegistrationsGroup'. This should be left empty and is not allowed in the PTI 1.1 profile.",
      "category": "Operators, Garages and Registrations",
      "service_type": "All",
      "reference": "4.4",
      "context": "//x:Registrations",
      "number": 14,
      "rules": [{ "test": "count(.) = 0" }]
    },
    {
      "details": "Garages are optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in 'Garagecode' field. Please include a value in the Garagecode field.",
      "category": "Operators, Garages and Registrations",
      "service_type": "All",
      "reference": "4.3",
      "context": "//x:Garages/x:Garage",
      "number": 15,
      "rules": [{ "test": "count(x:GarageCode) = 1" }]
    },
    {
      "details": "Mandatory elements incorrect in 'ServicesGroup'. The ServicesGroup should only contain a single Service element",
      "category": "Services and Lines",
      "service_type": "StandardService",
      "reference": "5.2",
      "context": "//x:Services",
      "number": 17,
      "rules": [{ "test": "count(x:Service) = 1" }]
    },
    {
      "details": "'Mandatory elements incorrect in 'ServicesGroup'. The ServicesGroup should only contain a single Service element except in cases when unregistered services are published with a single flexible service.",
      "category": "Services and Lines",
      "service_type": "FlexibleService",
      "reference": "5.2",
      "context": "//x:Services",
      "number": 17,
      "rules": [{ "test": "has_unregistered_service_codes(.)" }]
    },
    {
      "details": "Notes field is optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in 'Notes' field. Please do not include any of the following characters in the field:    , [ ] {{ }} ^ = @ : ; # $ £ ? % + < > « »  / | ~ _ ¬",
      "category": "Notes",
      "service_type": "All",
      "reference": "2.5",
      "context": "//x:Notes/x:Note/x:NoteText",
      "number": 7,
      "rules": [{ "test": "not(has_prohibited_chars(.))" }]
    },
    {
      "details": "Notes field is optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in 'Notes' field. The field you specified contains a date, please make sure that any date/time data is not included in notes and is used in the relevant date fields.",
      "category": "Notes",
      "service_type": "All",
      "reference": "2.5",
      "context": "//x:Notes/x:Note/x:NoteText",
      "number": 7,
      "rules": [{ "test": "not(contains_date(.))" }]
    },
    {
      "details": "Mandatory elements incorrect in 'OperatingProfile' field. Allowed values for <DaysofWeek> element in OperatingProfile are: <Monday/><Tuesday/><Wednesday/><Thursday/><Friday/><Staturday/><Sunday/>. Only above values are allowed. Grouped Values like <MondaytoFriday>are not allowed.",
      "category": "Vehicle journeys",
      "service_type": "All",
      "reference": "9.3.3",
      "context": "//x:DaysOfWeek",
      "number": 41,
      "rules": [
        {
          "test": "has_name(*, 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')"
        }
      ]
    },
    {
      "details": "Serviced Organisations are optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in 'ServicedOrganisatoin' field. When your service operators for more than a 9 month period, then please include a minimum of two dates.",
      "category": "Serviced organisations",
      "service_type": "All",
      "reference": "3.2",
      "context": "//x:ServicedOrganisation/x:WorkingDays/x:DateRange",
      "number": 9,
      "rules": [
        { "test": "count(x:StartDate) = 1" },
        { "test": "count(x:EndDate) = 1" }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'Holidays' field. Holidays must not be used. Please remove any entry values in this field.",
      "category": "Serviced organisations",
      "service_type": "All",
      "reference": "3.2",
      "context": "//x:ServicedOrganisation",
      "number": 50,
      "rules": [{ "test": "count(x:Holidays) = 0" }]
    },
    {
      "details": "Mandatory element incorrect in 'StandardService' field. Please ensure that at least one 'JourneyPattern' is defined.",
      "category": "Services and Lines",
      "service_type": "All",
      "reference": "5.3.2",
      "context": "//x:StandardService",
      "number": 21,
      "rules": [{ "test": "count(x:JourneyPattern) > 0" }]
    },
    {
      "details": "Mandatory elements incorrect in 'OutboundDescription' field. Please include values within the field. You can only leave it blank if you have filled in 'InboundDescription'",
      "category": "Services and Lines",
      "service_type": "StandardService",
      "reference": "5.5.4",
      "context": "//x:Line",
      "number": 25,
      "rules": [
        {
          "test": "count(x:OutboundDescription) = 1 or count(x:InboundDescription) = 1"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'Route'. Should not contain ReversingManoeuvres element.",
      "category": "Routes and tracks",
      "service_type": "All",
      "reference": "7.2",
      "context": "//x:Route",
      "number": 30,
      "rules": [
        {
          "test": "count(x:ReversingManoeuvres) = 0"
        }
      ]
    },
    {
      "details": "DepartureDayShift is optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in 'DepartureDayShift' field. You have incorrect values inputted, you can only use '1' as an entry.",
      "category": "Vehicle journeys",
      "service_type": "All",
      "reference": "9.2",
      "context": "//x:DepartureDayShift",
      "number": 46,
      "rules": [
        {
          "test": "./text() = '1'"
        }
      ]
    },
    {
      "details": "Tracks are optional. But if you are including it then it is required to be in the correct structure. Here, you have an incorrect structure in 'Track' field. Please ensure a single Track contains sufficient Location elements defined between a pair of stops.",
      "category": "Routes and tracks",
      "service_type": "All",
      "reference": "7.1",
      "context": "//x:Track/x:Mapping",
      "number": 32,
      "rules": [
        {
          "test": "count(x:Location) > 1"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'BankHolidayOperation'. Every enumerated bank holiday allowed in BankHolidayOperation should appear in either DaysOfOperation or DaysOfNonOperation",
      "category": "Vehicle journeys",
      "service_type": "All",
      "reference": "9.3.5",
      "context": "//x:BankHolidayOperation",
      "number": 43,
      "rules": [
        {
          "test": "validate_bank_holidays(.)"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'JourneyPatternTimingLink' field. Within the JourneyPatternTimingLink, the 'From SequenceNumber' and 'To SequenceNumber' are mandatory.",
      "category": "Journey timings on standard services",
      "service_type": "All",
      "reference": "8.4.4",
      "context": "//x:JourneyPatternTimingLink",
      "number": 38,
      "rules": [
        {
          "test": "count(x:From/@SequenceNumber) > 0"
        },
        {
          "test": "count(x:To/@SequenceNumber) > 0"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in the 'ServiceCode' field. The values you provided are not in the correct format. Please use following the format <PF0000459:134> for registered services and <UZ000WNCT:GTT32> for unregistered services.",
      "category": "Services and Lines",
      "service_type": "All",
      "reference": "5.3.2",
      "context": "//x:ServiceCode",
      "number": 18,
      "rules": [
        {
          "test": "regex(., '[a-zA-Z]{2}\\d{7}:[a-zA-Z0-9]+$') or regex(., 'UZ[a-zA-Z0-9]{7}:[a-zA-Z0-9]+$')"
        }
      ]
    },
    {
      "details": "Mandatory element incorrect in 'OperatingPeriod'. Please specify an EndDate only if it is in the near future. If the EndDate is more than 4026 days (11 years) after the StartDate, then please remove it.",
      "category": "Services and Lines",
      "service_type": "All",
      "reference": "5.3.3",
      "context": "//x:OperatingPeriod",
      "number": 20,
      "rules": [
        {
          "test": "count(x:EndDate) < 1 or date(x:StartDate) <= date(x:EndDate)"
        },
        {
          "test": "count(x:EndDate) < 1 or date(x:EndDate) - date(x:StartDate) <= days(4026)"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in Destination Display.Please specify 'DestinationDisplay' or 'DynamicDestinationDisplay' in either JourneyPattern level or Vehicle Journey level. Please refer to Section 9.1 in BODS PTI v1.1 document to understand more on how to define them.",
      "category": "Vehicle journeys",
      "service_type": "All",
      "reference": "9.1",
      "context": "//x:JourneyPattern",
      "number": 47,
      "rules": [
        {
          "test": "has_destination_display(.)"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect for Line ID. Please use the following format for Line ID: 'FESX:PF0000599:41:8:summer'. Where FESX is the NOC, Pf0000599:41 is the ServiceCode, 8 is the line name and summer is the season variant (if existing)",
      "category": "Services and Lines",
      "service_type": "All",
      "reference": "5.5",
      "context": "//x:Line",
      "number": 24,
      "rules": [
        {
          "test": "validate_line_id(.)"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'StandardService' field. For all non-flexible services please define them as 'StandardService'. For flexible services, please  use 'FlexibleService'.",
      "category": "Services and Lines",
      "service_type": "All",
      "reference": "5.3.5",
      "context": "//x:Service",
      "number": 22,
      "rules": [
        {
          "test": "has_flexible_or_standard_service(.)"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'JourneyPattern' field. If you have two links which follow on from each other, please ensure that the 'To' and 'From' in each have the same stop information. Refer to reference column for permitted elements and values",
      "category": "Journey timings on standard services",
      "service_type": "All",
      "reference": "8.4.3",
      "context": "//x:JourneyPatternSection",
      "number": 37,
      "rules": [
        {
          "test": "validate_timing_link_stops(.)"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'JourneyPatternSection' field. For zero times, the vehicle journey sets times for all links. For non-zero times, vehicle journey should not include link times.",
      "category": "Journey timings on standard services",
      "service_type": "All",
      "reference": "8.1",
      "number": 34,
      "context": "//x:JourneyPatternTimingLink",
      "rules": [
        {
          "test": "validate_run_time(.)"
        }
      ]
    },
    {
      "details": "Mandatory element incorrect in 'ModificationDateTime' field. The field should only contain the date and time of revision. - Mandatory element incorrect in 'ModificationDateTime' field. The date/time specified in the field cannot be earlier than the one specified in the 'CreationDateTime' field.",
      "category": "Versioning",
      "service_type": "All",
      "reference": "2.3",
      "number": 2,
      "context": "/x:TransXChange",
      "rules": [
        {
          "test": "validate_modification_date_time(.)"
        }
      ]
    },
    {
      "details": "Mandatory element incorrect in the 'Modification' field. Permitted values should be 'New' for first version files and 'Revise' for all other following versions.",
      "category": "Versioning",
      "service_type": "All",
      "reference": "2.3",
      "number": 3,
      "context": "/x:TransXChange",
      "rules": [
        {
          "test": "string(@Modification) = 'new' and string(@RevisionNumber) = '0' or not(string(@RevisionNumber) = '0') and string(@Modification) = 'revise'"
        }
      ]
    },
    {
      "details": "Mandatory element incorrect in Location field. LayoverPoint is optional, however if you are including it then please specify 'Location'.",
      "category": "Layover Point",
      "service_type": "All",
      "reference": "9.7.2",
      "number": 19,
      "context": "//x:LayoverPoint",
      "rules": [
        {
          "test": "count(x:Location) > 0"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'RouteSection'. Should not contain Direction.",
      "category": "Routes and tracks",
      "service_type": "All",
      "reference": "7.3",
      "number": 31,
      "context": "//x:RouteSection/x:RouteLink",
      "rules": [
        {
          "test": "count(x:Direction) = 0"
        }
      ]
    },
    {
      "details": "Mandatory Elements Missing",
      "category": "Vehicle Journey Interchange",
      "service_type": "All",
      "reference": "9.6.1",
      "number": 50,
      "context": "//x:VehicleJourneyInterchange ",
      "rules": [
        {
          "test": "count(x:InterchangeActivity) = 1"
        },
        {
          "test": "count(x:GuaranteedConnection) = 1"
        },
        {
          "test": "count(x:ChangeLineNumber) = 1"
        }
      ]
    },
    {
      "details": "Mandatory Elements Missing",
      "category": "Vehicle Journey Interchange",
      "service_type": "All",
      "reference": "5.3.6.2",
      "number": 52,
      "context": "//x:JourneyPatternInterchange",
      "rules": [
        {
          "test": "count(x:InterchangeActivity) = 1"
        },
        {
          "test": "count(x:GuaranteedConnection) = 1"
        },
        {
          "test": "count(x:ChangeLineNumber) = 1"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect in 'VehicleJourney' field. If you are providing VehicleJourneyRef then 'OperatingProfile’ can not be provided for that VehicleJourney.",
      "category": "Vehicle journeys",
      "service_type": "All",
      "reference": "9.2",
      "number": 39,
      "context": "//x:VehicleJourneys/x:VehicleJourney/x:VehicleJourneyRef",
      "rules": [
        {
          "test": "count(../x:OperatingProfile) = 0"
        }
      ]
    },
    {
      "details": "Mandatory elements incorrect for Services and Lines. Please ensure that the lines defined in the lines group are related either spatially or temporally.",
      "category": "Services and Lines",
      "service_type": "All",
      "reference": "5.4",
      "number": 23,
      "context": "//x:Lines",
      "rules": [
        {
          "test": "validate_lines(.)"
        }
      ]
    },
    {
      "details": " Mandatory elements incorrect in 'StopPoint' field. You cannot use this field for more than 2 months.",
      "category": "Stop points and stop areas",
      "service_type": "All",
      "reference": "6",
      "number": 28,
      "context": "//x:StopPoint",
      "rules": [
        {
          "test": "validate_non_naptan_stop_points(.)"
        }
      ]
    },
    {
      "details": "Mandatory element 'NationalOperatorCode' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 104,
      "context": "//x:Operator",
      "rules": [
        {
          "test": "count(x:NationalOperatorCode) = 1"
        }
      ]
    },
    {
      "details": "Mandatory element 'LicenceNumber' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 127,
      "context": "//x:Operator",
      "rules": [
        {
          "test": "count(x:LicenceNumber) = 1"
        }
      ]
    },
    {
      "details": "Mandatory element 'PublicUse' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 105,
      "context": "//x:Service",
      "rules": [
        {
          "test": "count(x:PublicUse) > 0"
        }
      ]
    },
    {
      "details": "Mandatory element 'OperatorRef' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 110,
      "context": "//x:JourneyPattern",
      "rules": [
        {
          "test": "count(x:OperatorRef) = 1"
        }
      ]
    },
    {
      "details": "Mandatory element 'Direction' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 111,
      "context": "//x:JourneyPattern",
      "rules": [
        {
          "test": "count(x:Direction) = 1"
        }
      ]
    },
    {
      "details": "Mandatory element 'RouteRef' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 112,
      "context": "//x:JourneyPattern",
      "rules": [
        {
          "test": "count(x:RouteRef) = 1"
        }
      ]
    },
    {
      "details": "Mandatory element 'JourneyPatternSectionRefs' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 113,
      "context": "//x:JourneyPattern",
      "rules": [
        {
          "test": "count(x:JourneyPatternSectionRefs) > 0"
        }
      ]
    },
    {
      "details": "Mandatory element 'RouteLinkRef' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 114,
      "context": "//x:JourneyPatternTimingLink",
      "rules": [
        {
          "test": "count(x:RouteLinkRef) > 0"
        }
      ]
    },
    {
      "details": "Mandatory element 'TimingStatus' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 129,
      "context": "//x:JourneyPatternTimingLink/x:From",
      "rules": [
        {
          "test": "count(x:TimingStatus) > 0"
        }
      ]
    },
    {
      "details": "Mandatory element 'TimingStatus' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 131,
      "context": "//x:JourneyPatternTimingLink/x:To",
      "rules": [
        {
          "test": "count(x:TimingStatus) > 0"
        }
      ]
    },
    {
      "details": "Mandatory element 'OperatorRef' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 117,
      "context": "//x:VehicleJourney",
      "rules": [
        {
          "test": "count(x:OperatorRef) > 0"
        }
      ]
    },
    {
      "details": "Mandatory element 'RunTime' missing",
      "category": "Mandatory Element",
      "service_type": "All",
      "reference": "0",
      "number": 118,
      "context": "//x:VehicleJourneyTimingLink",
      "rules": [
        {
          "test": "count(x:RunTime) > 0"
        }
      ]
    },
    {
      "details": "'ServiceClasification' is not inputted as flexible.",
      "category": "Flexible Service",
      "service_type": "FlexibleService",
      "reference": "10",
      "number": 119,
      "context": "//x:Service",
      "rules": [
        {
          "test": "has_flexible_service_classification(.)"
        }
      ]
    },
    {
      "details": "There are no FlexibleJourneyPatterns present. At least one needs to be present for a flexible service.",
      "category": "Flexible Service",
      "service_type": "FlexibleService",
      "reference": "10",
      "number": 120,
      "context": "//x:Service/x:FlexibleService",
      "rules": [
        {
          "test": "count(x:FlexibleJourneyPattern) > 0"
        }
      ]
    },
    {
      "details": "FixedStopUsage and FlexibleStopUsage TimingStatus must be set to OTH.",
      "category": "Flexible Service",
      "service_type": "FlexibleService",
      "reference": "10",
      "number": 121,
      "context": "//x:Service/x:FlexibleService/x:FlexibleJourneyPattern",
      "rules": [
        {
          "test": "check_flexible_service_timing_status(.)"
        }
      ]
    },
    {
      "details": "At least one type of booking arrangement needs to be provided from Phone, Email, Address or WebAddress.",
      "category": "Flexible Service",
      "service_type": "FlexibleService",
      "reference": "10",
      "number": 123,
      "context": "//x:Service/x:FlexibleService/x:FlexibleJourneyPattern/x:BookingArrangements",
      "rules": [
        {
          "test": "count(x:Phone) = 1 or count(x:Email) = 1 or count(x:WebAddress) = 1"
        }
      ]
    },
    {
      "details": "No FlexibleServiceTimes have been specified.",
      "category": "Flexible Service",
      "service_type": "FlexibleService",
      "reference": "10",
      "number": 124,
      "context": "//x:VehicleJourneys/x:FlexibleVehicleJourney",
      "rules": [
        {
          "test": "count(x:FlexibleServiceTimes) > 0"
        }
      ]
    }
  ]
}
